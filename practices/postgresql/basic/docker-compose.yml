version: '3.8'

networks:
  app_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24   # point to fixed subnet

services:
  postgres:
    image: postgis/postgis:16-3.4 # Use preinstall postgis image
    networks:
      - app_net
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust --username=user --data-checksums"
    command:
      - "postgres"
      - "-c"
      - "listen_addresses=*"
      - "-c"
      - "hba_file=/etc/postgresql/pg_hba.conf"  # 自定义规则文件
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d mydb" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d # execute init script
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf  # load custom rules

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  golang:
    image: golang:1.23
    networks:
      - app_net
    container_name: postgres-go
    restart: always
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      - postgres
    command:
      - sh
      - -c
      - "apt-get update && apt-get install -y postgresql-client protobuf-compiler && sleep infinity" # install psql and keep container running

volumes:
  pg_data: